
// Angular Material custom theme
// See https://material.angular.io/guide/theming for more details.
//
// You can also read https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1
// for more insight about Angular Material theming.

@import "~@angular/material/theming";
@import "../common-theme.scss";
// Theme variables, must be included before the libraries to allow overriding defaults
@import "./ant1-theme-variables.scss";

/*
 * Global application theme.
 * Framework overrides and customization goes here.
 */

// stylelint-disable-next-line selector-max-universal

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$bloomen-ant1-primary: mat-palette($mat-ant1);

//$bloomen-app-accent: mat-palette(palette, default, ligther, darker)
//$bloomen-app-accent: mat-palette($mat-pink, A200, A100, A400);
$bloomen-ant1-accent: mat-palette($mat-ant1, 900, A100, A400);

// The warn palette is optional (defaults to red).
$bloomen-ant1-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$bloomen-ant1-theme-light: bloomen-light-theme(
  $bloomen-ant1-primary,
  $bloomen-ant1-accent,
  $bloomen-ant1-warn,
  $mat-light-theme-background,
  $mat-light-theme-foreground
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
.bloomen-ant1-theme-light {
  @include angular-material-theme($bloomen-ant1-theme-light);
}
